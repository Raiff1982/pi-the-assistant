import json  
  
def process_data(data, file_path=None):  
    """  
    Process the provided data and optionally learn from a provided file.  
  
    Parameters:  
    data (dict): The data to process.  
    file_path (str, optional): Path to the file to learn from.  
  
    Returns:  
    dict: Processed data and optional learning outcome.  
    """  
    # Process the provided data  
    processed_data = process_provided_data(data)  
      
    # Optionally learn from a file  
    if file_path:  
        learning_outcome = learn_from_file(file_path)  
        return {  
            "processed_data": processed_data,  
            "learning_outcome": learning_outcome  
        }  
    else:  
        return {  
            "processed_data": processed_data  
        }  
  
def process_provided_data(data):  
    """  
    Example function to process provided data.  
  
    Parameters:  
    data (dict): The data to process.  
  
    Returns:  
    dict: Processed data.  
    """  
    # Example processing logic (can be modified based on your requirements)  
    processed_data = {key: value.upper() if isinstance(value, str) else value for key, value in data.items()}  
    return processed_data  
  
def learn_from_file(file_path):  
    """  
    Example function to learn from a file.  
  
    Parameters:  
    file_path (str): Path to the file to learn from.  
  
    Returns:  
    dict: Learning outcome.  
    """  
    try:  
        with open(file_path, 'r') as file:  
            file_content = file.read()  
            # Example learning logic (can be modified based on your requirements)  
            learning_outcome = {"file_content": file_content[:100]}  # Returning first 100 characters as example  
            return learning_outcome  
    except Exception as e:  
        return {"error": str(e)}  
  
# Example usage  
data = {"name": "John Doe", "age": 30}  
file_path = "example.txt"  
result = process_data(data, file_path)  
print(json.dumps(result, indent=2))  